// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

import * as pulumiAws from "@pulumi/aws";

export class IamServiceAccountRole extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'lbrlabs-eks:index:IamServiceAccountRole';

    /**
     * Returns true if the given object is an instance of IamServiceAccountRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamServiceAccountRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamServiceAccountRole.__pulumiType;
    }

    declare public /*out*/ readonly role: pulumi.Output<pulumiAws.iam.Role>;

    /**
     * Create a IamServiceAccountRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamServiceAccountRoleArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.namespaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespaceName'");
            }
            if (args?.oidcProviderArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'oidcProviderArn'");
            }
            if (args?.oidcProviderUrl === undefined && !opts.urn) {
                throw new Error("Missing required property 'oidcProviderUrl'");
            }
            if (args?.serviceAccountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountName'");
            }
            resourceInputs["namespaceName"] = args?.namespaceName;
            resourceInputs["oidcProviderArn"] = args?.oidcProviderArn;
            resourceInputs["oidcProviderUrl"] = args?.oidcProviderUrl;
            resourceInputs["serviceAccountName"] = args?.serviceAccountName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["role"] = undefined /*out*/;
        } else {
            resourceInputs["role"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamServiceAccountRole.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a IamServiceAccountRole resource.
 */
export interface IamServiceAccountRoleArgs {
    /**
     * The namespace to create the service account in.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The arn of the OIDC provider attached to your EKS cluster.
     */
    oidcProviderArn: pulumi.Input<string>;
    /**
     * The URL of the OIDC provider attached to your EKS cluster.
     */
    oidcProviderUrl: pulumi.Input<string>;
    /**
     * The name of the service account to bind to the role
     */
    serviceAccountName: pulumi.Input<string>;
    /**
     * Key-value map of tags to apply to the service account.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
