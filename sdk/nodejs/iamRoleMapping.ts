// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IamRoleMapping extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'lbrlabs-eks:index:IamRoleMapping';

    /**
     * Returns true if the given object is an instance of IamRoleMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamRoleMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamRoleMapping.__pulumiType;
    }


    /**
     * Create a IamRoleMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamRoleMappingArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.groups === undefined && !opts.urn) {
                throw new Error("Missing required property 'groups'");
            }
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["groups"] = args?.groups;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["username"] = args?.username;
        } else {
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamRoleMapping.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a IamRoleMapping resource.
 */
export interface IamRoleMappingArgs {
    /**
     * An array of groups to map the IAM role to.
     */
    groups: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The arn of the role to map to a Kubernetes group.
     */
    roleArn: pulumi.Input<string>;
    /**
     * The username to assign to the rolemapping.
     */
    username: pulumi.Input<string>;
}
